
* Idea
A virtual companion, or robotic assistant for those living alone and requiring
personalized in-home care.

* Implementation
The implementation of the idea depends on three different utilities
- Python module =whereami=
- Python web framework Flask
- Typescript web application front-end

** Location-polling
Python module =whereami= derives location-based data based on available wifi
access points. Many devices have on-board wifi cards which could be used to keep
track of the devices location without the need for GPS, or other complicated
hardware for in-home position tracking. Any generic smart watch could be used as
kind of location polling device.

** Flask server
A lightweight Python web framework to receive the location data from the polling
device. Manages information about the whereabouts of the patient throughout the
day.

** Web application front-end
The Typescript web application polls the database created by the Flask server to
display the current location of the patient on the screen display.

* Rationale/Extension
Many elderly patients have problems with Dementia or Alzheimer's. In some cases,
these patient may need help with daily judgment and reasoning. A robotic
assistant would be available 24 hours of the day to help in such a situation.
For example, perhaps the location-polling device reports a lot of time being
spent in the bathroom. The robotic assistant could be in the house to ask the
patient if they may be in need of assistance. This could achieved via a speaker
placed in the bathroom. If no response is given, then emergency services could
be called to aid.

Another problem these types of patients could have come from an inability to
focus and pay attention. Daily agenda information could be stored, and the
robotic assistant could remind the patient of doing those things. For example,
if a family member has scheduled a visit, then the robotic assistant could
inform the patient in the morning that the family member will be coming, as well
as just before the family member is scheduled to arrive.

The robotic assistant in these ways acts not only as an automated utility for
emergency services, but as a virtual companion for the patient. Just as one
could play 

#+begin_example
def detect_too_many_bathroom_uses(self):
    uses = 0
    for el in self.states:
        if el == 'bathroom':
            uses += 1
    return uses >= 4
#+end_example
